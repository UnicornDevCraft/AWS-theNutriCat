// Importing custom variables
@use '../custom' as *;
@use '../components/typography' as *;
@use '../components/mixins' as *;

// Styling flash messages
.notifications{
    position: fixed;
    z-index: 1000;
    top: 5rem;
    right: 0;

    .toast{
        position: relative;
        padding: 0.8rem;
        color: $white;
        margin-bottom: 0.8rem;
        max-width: 400px;
        flex: 1;
        display: grid;
        grid-template-columns: 70px 1fr 70px;
        border-radius: 5px;
        animation: show 0.3s ease 1 forwards;

        &::before{
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 3px;
            content: "";
            
            animation: timeOut 5s linear 1 forwards;

            @keyframes timeOut{
                to{
                    width: 0;
                }
            }
        }

        span.material-symbols-outlined{
            display: flex;
            justify-content: center;
            
        }

        span.fading{
            color: $white;
            opacity: 0.6;
        }

        &.success{
            @include linear-gradient(to right, $dark-salad, 0%, $dark-green 30%);

            &::before{
                background-color: $salad;
                box-shadow: 0 0 10px $salad;
            }

            .type-success{
                color: $salad;
                font-size: 2.5rem;
                align-items: center;
            }
        }

        &.error{
            @include linear-gradient(to right, $dark-red, 0%, $darkest-red 30%);

            &::before{
                background-color: $red;
                box-shadow: 0 0 10px $red;
            }

            .type-error{
                color: $red;
                font-size: 2.5rem;
                align-items: center;
            }
        }

        @keyframes show{
            0%{
                transform: translateX(100%);
            }
            40%{
                transform: translateX(-20%);
            }
            80%{
                transform: translateX(-10%);
            }
            100%{
                transform: translateX(0);
            }
        }
    }
}
